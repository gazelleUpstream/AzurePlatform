name: template - init gitHub

on:
  workflow_call:
    inputs:
        managementGroupHierarchy:
            required: true
            type: string

jobs:
  Utils:
    runs-on: ubuntu-latest
    environment: ${{ inputs.managementGroupHierarchy }}
    steps:
    - name: get github token
      id: github-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.APP_GITHUB_AZUREPLATFORM_ID }}
        private-key: ${{ secrets.APP_GITHUB_AZUREPLATFORM_KEY }}   

    - uses: actions/checkout@v4
      with:
        token: ${{ steps.github-token.outputs.token }}

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_PLATFORM_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID}}
        allow-no-subscriptions: true
        enable-AzPSSession: true

    - name: fetch role definitions
      uses: azure/powershell@v2
      with:
        azPSVersion: "latest"
        inlineScript: |
          ./.github/utils/get-AzureRoleDefinitions.ps1

    - name: push role definitions
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "update Azure role definitions"
          git push
        else
          echo "No changes to commit"
        fi
    
  GitHubEnvironment:
    runs-on: ubuntu-latest
    environment: ${{ inputs.managementGroupHierarchy }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: get github token
      id: github-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.APP_GITHUB_AZUREPLATFORM_ID }}
        private-key: ${{ secrets.APP_GITHUB_AZUREPLATFORM_KEY }}
        owner: ${{ github.repository_owner }}

    - name: set env variables - AzurePlatform
      env:
        GH_TOKEN: ${{ steps.github-token.outputs.token }}
        MANAGEMENT_SUBSCRIPTION_ID: "INIT_MANAGEMENT_SUBSCRIPTION_ID_${{ inputs.managementGroupHierarchy }}"
        AZURE_PLATFORM_CLIENT_ID: "INIT_AZURE_PLATFORM_CLIENT_ID_${{ inputs.managementGroupHierarchy }}"
        AZURE_PLATFORM_PRINCIPAL_ID: "INIT_AZURE_PLATFORM_PRINCIPAL_ID_${{ inputs.managementGroupHierarchy }}"
      run: |
          echo "create environment"
          gh api --method PUT -H "Accept: application/vnd.github+json" \
          repos/${{ github.repository_owner }}/AzurePlatform/environments/${{ inputs.managementGroupHierarchy }}

          gh variable set MANAGEMENT_SUBSCRIPTION_ID \
            --body ${{ vars[env.MANAGEMENT_SUBSCRIPTION_ID] }} \
            --env ${{ inputs.managementGroupHierarchy }} \
            -R "${{ github.repository_owner }}/AzurePlatform"

          gh variable set AZURE_PLATFORM_CLIENT_ID \
            --body ${{ vars[env.AZURE_PLATFORM_CLIENT_ID] }} \
            --env ${{ inputs.managementGroupHierarchy }} \
            -R "${{ github.repository_owner }}/AzurePlatform"

          gh variable set AZURE_PLATFORM_PRINCIPAL_ID \
            --body ${{ vars[env.AZURE_PLATFORM_PRINCIPAL_ID ]}} \
            --env ${{ inputs.managementGroupHierarchy }} \
            -R "${{ github.repository_owner }}/AzurePlatform"

          gh variable set TOP_LEVEL_MANAGEMENTGROUP_NAME \
          --body "${{ vars.MANAGEMENTGROUP_HIERARCHY_NAME }}-${{ inputs.managementGroupHierarchy}}" \
          --env ${{ inputs.managementGroupHierarchy }} \
          -R "${{ github.repository_owner }}/AzurePlatform"
